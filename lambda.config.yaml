component_version: 1.0.0
maximum_availability_zones: 5

# Demo Config

# distribution:
#   bucket: source.example.dev
#   prefix: lambda
#
# functions:
#   myfunction:
#       handler: handler.lambda_handler
#       runtime: python3.6
#       code_uri: myfunction/${MyFunctionVersion}/src.zip
#       timeout: 30
#       environment:
#         Environment:
#           Ref: Environment
#       policies:
#         logs:
#           action:
#             - logs:PutLogEvents
#             - logs:DescribeLogStreams
#             - logs:DescribeLogGroups
#           resource:
#             - '*'
#       enable_eni: true
#       log_retention: 7
#       events:
#         cron:
#           type: schedule
#           expression: cron(0 12 * * ? *)
#           payload: "{ 'a': 1, 'b': 2 }"
#         trigger:
#           type: sns
#         filter:
#           type: filter
#           pattern: '[date, deployment_id, bytes]'
#           log_group: myloggroup


distribution:
  bucket: source.example.dev
  prefix: lambda

functions:
  myfunction:
      handler: handler.lambda_handler
      runtime: python3.6
      code_uri: myfunction/src.zip
      timeout: 30
      policies:
        logs:
          action:
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            - logs:DescribeLogGroups
          resource:
            - '*'
      enable_eni: false
      log_retention: 7
      events:
        trigger:
          type: s3
          bucket: mybucket
